const fs = require("fs")
const createComputer = require('../common/computer')

const debug = false
const log = (msg, ...extra) => {
    if (!debug) {
        return
    }
    console.log(msg, ...extra)
}

const phase1 = [4, 3, 2, 1, 0]
const test1 = [3, 15, 3, 16, 1002, 16, 10, 16, 1, 16, 15, 15, 4, 15, 99, 0, 0]
const phase2 = [0, 1, 2, 3, 4]
const test2 = [
    3,
    23,
    3,
    24,
    1002,
    24,
    10,
    24,
    1002,
    23,
    -1,
    23,
    101,
    5,
    23,
    23,
    1,
    24,
    23,
    23,
    4,
    23,
    99,
    0,
    0,
]
const phase3 = [1, 0, 4, 3, 2]
const test3 = [
    3,
    31,
    3,
    32,
    1002,
    32,
    10,
    32,
    1001,
    31,
    -2,
    31,
    1007,
    31,
    0,
    33,
    1002,
    33,
    7,
    33,
    1,
    33,
    31,
    31,
    1,
    32,
    31,
    31,
    4,
    31,
    99,
    0,
    0,
    0,
]

function runAmplifiers(program, phaseSettings, start = 0) {
    return phaseSettings.reduce((prior, phase) => {
        return createComputer(program, [phase, prior])
    }, start)
}

// DAY 1
const day1 = [
    3,
    8,
    1001,
    8,
    10,
    8,
    105,
    1,
    0,
    0,
    21,
    38,
    59,
    76,
    89,
    106,
    187,
    268,
    349,
    430,
    99999,
    3,
    9,
    1002,
    9,
    3,
    9,
    101,
    2,
    9,
    9,
    1002,
    9,
    4,
    9,
    4,
    9,
    99,
    3,
    9,
    1001,
    9,
    5,
    9,
    1002,
    9,
    5,
    9,
    1001,
    9,
    2,
    9,
    1002,
    9,
    3,
    9,
    4,
    9,
    99,
    3,
    9,
    1001,
    9,
    4,
    9,
    102,
    4,
    9,
    9,
    1001,
    9,
    3,
    9,
    4,
    9,
    99,
    3,
    9,
    101,
    4,
    9,
    9,
    1002,
    9,
    5,
    9,
    4,
    9,
    99,
    3,
    9,
    1002,
    9,
    3,
    9,
    101,
    5,
    9,
    9,
    1002,
    9,
    3,
    9,
    4,
    9,
    99,
    3,
    9,
    102,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    1002,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    1002,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    101,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    1002,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    102,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    101,
    1,
    9,
    9,
    4,
    9,
    3,
    9,
    1001,
    9,
    1,
    9,
    4,
    9,
    3,
    9,
    1002,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    101,
    2,
    9,
    9,
    4,
    9,
    99,
    3,
    9,
    1002,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    101,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    1002,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    101,
    1,
    9,
    9,
    4,
    9,
    3,
    9,
    102,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    102,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    101,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    101,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    102,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    1001,
    9,
    2,
    9,
    4,
    9,
    99,
    3,
    9,
    1002,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    1001,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    101,
    1,
    9,
    9,
    4,
    9,
    3,
    9,
    101,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    101,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    102,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    1001,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    102,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    1001,
    9,
    1,
    9,
    4,
    9,
    3,
    9,
    1001,
    9,
    2,
    9,
    4,
    9,
    99,
    3,
    9,
    1001,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    102,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    1001,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    102,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    101,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    1002,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    1002,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    1002,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    101,
    1,
    9,
    9,
    4,
    9,
    3,
    9,
    101,
    1,
    9,
    9,
    4,
    9,
    99,
    3,
    9,
    101,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    102,
    2,
    9,
    9,
    4,
    9,
    3,
    9,
    1002,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    1001,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    1001,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    1001,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    1001,
    9,
    1,
    9,
    4,
    9,
    3,
    9,
    1001,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    1001,
    9,
    2,
    9,
    4,
    9,
    3,
    9,
    102,
    2,
    9,
    9,
    4,
    9,
    99,
]

let phaseSettings = [0, 1, 2, 3, 4]
let results = []

const moveItem = (ary, from, to) => {
    let _array = [...ary]
    let [item] = _array.splice(from, 1)
    _array.splice(to, 0, item)
    return _array
}

let i = 0
do {
    let ii = 0
    do {
        const thrusterSignal = runAmplifiers(day1, phaseSettings)

        log("PHASE: ", phaseSettings, " THRUSTER: ", thrusterSignal)
        results.push([phaseSettings, thrusterSignal])

        phaseSettings = moveItem(phaseSettings, ii, ++ii)
    } while (ii < 5)

    phaseSettings = moveItem(phaseSettings, i, ++i)
} while (i < 5)

const maxThruster = results.reduce(
    (max, item) => {
        if (max[1] < item[1]) {
            return item
        }

        return max
    },
    [[], 0]
)

console.log("MAX SETTING", maxThruster)

process.exit(0)
